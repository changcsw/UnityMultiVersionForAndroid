// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'

        // classpath 'com.google.gms:google-services:4.3.3'
        // Add the Crashlytics Gradle plugin.
        
**BUILD_SCRIPT_DEPS**}
}

allprojects {
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs 'libs'
        }

        // Elex SDK maven repository.
        maven {
            url "http://10.1.4.209:8081/repository/maven-public/"
        }
        // BI SDK maven repository
        maven {
            url "http://10.1.4.64:8081/repository/maven-public/"
        }
    }
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply plugin: 'com.android.application'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Elex SDK library
    implementation 'com.elex.sdk:elex-global-api:1.2.4'
    implementation 'com.elex.sdk:elex-unity-bridge:1.2.2'

    // Oversea
    implementation 'com.elex.sdk:elex-facebook:1.2.2'
    implementation 'com.elex.sdk:elex-firebase:1.2.2'
    implementation 'com.elex.sdk:elex-crashlytics:1.2.2'
    implementation 'com.elex.sdk:elex-google-iap:1.2.1'
    implementation 'com.elex.sdk:elex-share:1.2.0'
    // implementation 'com.elex.sdk:elex-google:1.2.2'
    // implementation 'com.elex.sdk:elex-play-games:1.2.0'
    // implementation 'com.elex.sdk:elex-twitter:1.2.0'

    // China
    // implementation 'com.elex.sdk.channel:elex-esdk:1.2.1'
    
**DEPS**}
// firebase plugins
// apply plugin: 'com.google.gms.google-services' // Google Services Gradle plugin
// Apply the Crashlytics Gradle plugin
// apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        applicationId '**APPLICATIONID**'
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'

        multiDexEnabled true
    }

     packagingOptions {
         exclude 'META-INF/proguard/androidx-annotations.pro'
     }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**]
    }**SIGN**

    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            useProguard **PROGUARD_RELEASE**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD****SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS****SPLITS**
**BUILT_APK_LOCATION**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}**SPLITS_VERSION_CODE****REPOSITORIES****SOURCE_BUILD_SETUP**

/***************************以下任务是为了将Plugin/Android/下的 res资源打到最终包里*************************/ 
task copyRes(type: Copy){
    from("./unity-android-resources/res/")
    into("./src/main/res/")
}

tasks.whenTaskAdded { task ->
    if (task.name == 'mergeReleaseResources') {
        task.dependsOn 'copyRes'
    }
}
